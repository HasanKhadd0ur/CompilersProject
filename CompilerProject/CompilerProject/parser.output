Grammar

    0 $accept: smalc_program $end

    1 smalc_program: smalc_program func
    2              | smalc_program var_decl
    3              | smalc_program class_dec
    4              | /* empty */

    5 class_dec: CLASS IDENT '{' members '}'

    6 members: members func
    7        | members var_decl
    8        | members constructor
    9        | /* empty */

   10 constructor: IDENT '(' arg_e ')' compound_statement

   11 unary_operator: '+'
   12               | '-'
   13               | MUL
   14               | DIV
   15               | '>'
   16               | '<'
   17               | GREATER
   18               | SMALLER
   19               | ISEQUAL
   20               | NOTEQUAL
   21               | OR
   22               | AND

   23 compound_statement: '{' stmts '}'

   24 func: standard_type IDENT '(' arg_e ')' compound_statement

   25 var_decl: standard_type var_decl_list ';'

   26 var_decl_list: variable_id
   27              | var_decl_list ',' variable_id

   28 variable_id: IDENT
   29            | IDENT '=' expression
   30            | IDENT '[' ']'
   31            | IDENT '[' ']' '=' '{' valueList '}'

   32 valueList: valueList ',' value
   33          | value

   34 value: INTNUM
   35      | STRINGCONST
   36      | CHARCONST
   37      | TRUE
   38      | FALSE
   39      | REALNUM
   40      | NULLL

   41 args: arg
   42     | args ',' arg

   43 arg: standard_type IDENT
   44    | standard_type IDENT '[' ']'

   45 arg_e: args
   46      | /* empty */

   47 stmts: /* empty */
   48      | stmts statement
   49      | stmts var_decl

   50 expression_list: expression
   51                | expression_list ',' expression
   52                | /* empty */

   53 variable: IDENT
   54         | IDENT '[' expression ']'

   55 standard_type: INT
   56              | STRING
   57              | CHAR
   58              | BOOL
   59              | FLOAT

   60 assignStatement: variable '=' expression ';'

   61 cond_stmt: IF '(' expression ')' statement
   62          | IF '(' expression ')' statement ELSE statement

   63 while_stmt: WHILE '(' expression ')' statement

   64 statement: assignStatement
   65          | cond_stmt
   66          | while_stmt
   67          | BREAK ';'
   68          | CONTINUE ';'
   69          | RETURN expression ';'
   70          | compound_statement

   71 tripleCondition: expression '?' expression ':' expression

   72 expression: variable
   73           | value
   74           | IDENT '(' expression_list ')'
   75           | '(' expression ')'
   76           | expression unary_operator expression
   77           | '!' expression
   78           | '-' expression
   79           | tripleCondition


Terminals, with rules where they appear

$end (0) 0
'!' (33) 77
'(' (40) 10 24 61 62 63 74 75
')' (41) 10 24 61 62 63 74 75
'+' (43) 11
',' (44) 27 32 42 51
'-' (45) 12 78
':' (58) 71
';' (59) 25 60 67 68 69
'<' (60) 16
'=' (61) 29 31 60
'>' (62) 15
'?' (63) 71
'[' (91) 30 31 44 54
']' (93) 30 31 44 54
'{' (123) 5 23 31
'}' (125) 5 23 31
error (256)
IDENT (258) 5 10 24 28 29 30 31 43 44 53 54 74
INTNUM (259) 34
STRINGCONST (260) 35
CHARCONST (261) 36
NULLL (262) 40
FALSE (263) 38
TRUE (264) 37
REALNUM (265) 39
IF (266) 61 62
OR (267) 21
DIV (268) 14
AND (269) 22
MUL (270) 13
ELSE (271) 62
WHILE (272) 63
INT (273) 55
FLOAT (274) 59
BOOL (275) 58
CHAR (276) 57
STRING (277) 56
CLASS (278) 5
GREATER (279) 17
SMALLER (280) 18
ISEQUAL (281) 19
NOTEQUAL (282) 20
BREAK (283) 67
CONTINUE (284) 68
RETURN (285) 69
IF_PREC (286)
CONFLICTSOLUTION (287)


Nonterminals, with rules where they appear

$accept (49)
    on left: 0
smalc_program (50)
    on left: 1 2 3 4, on right: 0 1 2 3
class_dec (51)
    on left: 5, on right: 3
members (52)
    on left: 6 7 8 9, on right: 5 6 7 8
constructor (53)
    on left: 10, on right: 8
unary_operator (54)
    on left: 11 12 13 14 15 16 17 18 19 20 21 22, on right: 76
compound_statement (55)
    on left: 23, on right: 10 24 70
func (56)
    on left: 24, on right: 1 6
var_decl (57)
    on left: 25, on right: 2 7 49
var_decl_list (58)
    on left: 26 27, on right: 25 27
variable_id (59)
    on left: 28 29 30 31, on right: 26 27
valueList (60)
    on left: 32 33, on right: 31 32
value (61)
    on left: 34 35 36 37 38 39 40, on right: 32 33 73
args (62)
    on left: 41 42, on right: 42 45
arg (63)
    on left: 43 44, on right: 41 42
arg_e (64)
    on left: 45 46, on right: 10 24
stmts (65)
    on left: 47 48 49, on right: 23 48 49
expression_list (66)
    on left: 50 51 52, on right: 51 74
variable (67)
    on left: 53 54, on right: 60 72
standard_type (68)
    on left: 55 56 57 58 59, on right: 24 25 43 44
assignStatement (69)
    on left: 60, on right: 64
cond_stmt (70)
    on left: 61 62, on right: 65
while_stmt (71)
    on left: 63, on right: 66
statement (72)
    on left: 64 65 66 67 68 69 70, on right: 48 61 62 63
tripleCondition (73)
    on left: 71, on right: 79
expression (74)
    on left: 72 73 74 75 76 77 78 79, on right: 29 50 51 54 60 61 62
    63 69 71 75 76 77 78


State 0

    0 $accept: . smalc_program $end

    $default  reduce using rule 4 (smalc_program)

    smalc_program  go to state 1


State 1

    0 $accept: smalc_program . $end
    1 smalc_program: smalc_program . func
    2              | smalc_program . var_decl
    3              | smalc_program . class_dec

    $end    shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    BOOL    shift, and go to state 5
    CHAR    shift, and go to state 6
    STRING  shift, and go to state 7
    CLASS   shift, and go to state 8

    class_dec      go to state 9
    func           go to state 10
    var_decl       go to state 11
    standard_type  go to state 12


State 2

    0 $accept: smalc_program $end .

    $default  accept


State 3

   55 standard_type: INT .

    $default  reduce using rule 55 (standard_type)


State 4

   59 standard_type: FLOAT .

    $default  reduce using rule 59 (standard_type)


State 5

   58 standard_type: BOOL .

    $default  reduce using rule 58 (standard_type)


State 6

   57 standard_type: CHAR .

    $default  reduce using rule 57 (standard_type)


State 7

   56 standard_type: STRING .

    $default  reduce using rule 56 (standard_type)


State 8

    5 class_dec: CLASS . IDENT '{' members '}'

    IDENT  shift, and go to state 13


State 9

    3 smalc_program: smalc_program class_dec .

    $default  reduce using rule 3 (smalc_program)


State 10

    1 smalc_program: smalc_program func .

    $default  reduce using rule 1 (smalc_program)


State 11

    2 smalc_program: smalc_program var_decl .

    $default  reduce using rule 2 (smalc_program)


State 12

   24 func: standard_type . IDENT '(' arg_e ')' compound_statement
   25 var_decl: standard_type . var_decl_list ';'

    IDENT  shift, and go to state 14

    var_decl_list  go to state 15
    variable_id    go to state 16


State 13

    5 class_dec: CLASS IDENT . '{' members '}'

    '{'  shift, and go to state 17


State 14

   24 func: standard_type IDENT . '(' arg_e ')' compound_statement
   28 variable_id: IDENT .
   29            | IDENT . '=' expression
   30            | IDENT . '[' ']'
   31            | IDENT . '[' ']' '=' '{' valueList '}'

    '='  shift, and go to state 18
    '('  shift, and go to state 19
    '['  shift, and go to state 20

    $default  reduce using rule 28 (variable_id)


State 15

   25 var_decl: standard_type var_decl_list . ';'
   27 var_decl_list: var_decl_list . ',' variable_id

    ';'  shift, and go to state 21
    ','  shift, and go to state 22


State 16

   26 var_decl_list: variable_id .

    $default  reduce using rule 26 (var_decl_list)


State 17

    5 class_dec: CLASS IDENT '{' . members '}'

    $default  reduce using rule 9 (members)

    members  go to state 23


State 18

   29 variable_id: IDENT '=' . expression

    IDENT        shift, and go to state 24
    INTNUM       shift, and go to state 25
    STRINGCONST  shift, and go to state 26
    CHARCONST    shift, and go to state 27
    NULLL        shift, and go to state 28
    FALSE        shift, and go to state 29
    TRUE         shift, and go to state 30
    REALNUM      shift, and go to state 31
    '!'          shift, and go to state 32
    '-'          shift, and go to state 33
    '('          shift, and go to state 34

    value            go to state 35
    variable         go to state 36
    tripleCondition  go to state 37
    expression       go to state 38


State 19

   24 func: standard_type IDENT '(' . arg_e ')' compound_statement

    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    BOOL    shift, and go to state 5
    CHAR    shift, and go to state 6
    STRING  shift, and go to state 7

    $default  reduce using rule 46 (arg_e)

    args           go to state 39
    arg            go to state 40
    arg_e          go to state 41
    standard_type  go to state 42


State 20

   30 variable_id: IDENT '[' . ']'
   31            | IDENT '[' . ']' '=' '{' valueList '}'

    ']'  shift, and go to state 43


State 21

   25 var_decl: standard_type var_decl_list ';' .

    $default  reduce using rule 25 (var_decl)


State 22

   27 var_decl_list: var_decl_list ',' . variable_id

    IDENT  shift, and go to state 44

    variable_id  go to state 45


State 23

    5 class_dec: CLASS IDENT '{' members . '}'
    6 members: members . func
    7        | members . var_decl
    8        | members . constructor

    IDENT   shift, and go to state 46
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    BOOL    shift, and go to state 5
    CHAR    shift, and go to state 6
    STRING  shift, and go to state 7
    '}'     shift, and go to state 47

    constructor    go to state 48
    func           go to state 49
    var_decl       go to state 50
    standard_type  go to state 12


State 24

   53 variable: IDENT .
   54         | IDENT . '[' expression ']'
   74 expression: IDENT . '(' expression_list ')'

    '('  shift, and go to state 51
    '['  shift, and go to state 52

    $default  reduce using rule 53 (variable)


State 25

   34 value: INTNUM .

    $default  reduce using rule 34 (value)


State 26

   35 value: STRINGCONST .

    $default  reduce using rule 35 (value)


State 27

   36 value: CHARCONST .

    $default  reduce using rule 36 (value)


State 28

   40 value: NULLL .

    $default  reduce using rule 40 (value)


State 29

   38 value: FALSE .

    $default  reduce using rule 38 (value)


State 30

   37 value: TRUE .

    $default  reduce using rule 37 (value)


State 31

   39 value: REALNUM .

    $default  reduce using rule 39 (value)


State 32

   77 expression: '!' . expression

    IDENT        shift, and go to state 24
    INTNUM       shift, and go to state 25
    STRINGCONST  shift, and go to state 26
    CHARCONST    shift, and go to state 27
    NULLL        shift, and go to state 28
    FALSE        shift, and go to state 29
    TRUE         shift, and go to state 30
    REALNUM      shift, and go to state 31
    '!'          shift, and go to state 32
    '-'          shift, and go to state 33
    '('          shift, and go to state 34

    value            go to state 35
    variable         go to state 36
    tripleCondition  go to state 37
    expression       go to state 53


State 33

   78 expression: '-' . expression

    IDENT        shift, and go to state 24
    INTNUM       shift, and go to state 25
    STRINGCONST  shift, and go to state 26
    CHARCONST    shift, and go to state 27
    NULLL        shift, and go to state 28
    FALSE        shift, and go to state 29
    TRUE         shift, and go to state 30
    REALNUM      shift, and go to state 31
    '!'          shift, and go to state 32
    '-'          shift, and go to state 33
    '('          shift, and go to state 34

    value            go to state 35
    variable         go to state 36
    tripleCondition  go to state 37
    expression       go to state 54


State 34

   75 expression: '(' . expression ')'

    IDENT        shift, and go to state 24
    INTNUM       shift, and go to state 25
    STRINGCONST  shift, and go to state 26
    CHARCONST    shift, and go to state 27
    NULLL        shift, and go to state 28
    FALSE        shift, and go to state 29
    TRUE         shift, and go to state 30
    REALNUM      shift, and go to state 31
    '!'          shift, and go to state 32
    '-'          shift, and go to state 33
    '('          shift, and go to state 34

    value            go to state 35
    variable         go to state 36
    tripleCondition  go to state 37
    expression       go to state 55


State 35

   73 expression: value .

    $default  reduce using rule 73 (expression)


State 36

   72 expression: variable .

    $default  reduce using rule 72 (expression)


State 37

   79 expression: tripleCondition .

    $default  reduce using rule 79 (expression)


State 38

   29 variable_id: IDENT '=' expression .
   71 tripleCondition: expression . '?' expression ':' expression
   76 expression: expression . unary_operator expression

    OR        shift, and go to state 56
    DIV       shift, and go to state 57
    AND       shift, and go to state 58
    MUL       shift, and go to state 59
    GREATER   shift, and go to state 60
    SMALLER   shift, and go to state 61
    ISEQUAL   shift, and go to state 62
    NOTEQUAL  shift, and go to state 63
    '<'       shift, and go to state 64
    '>'       shift, and go to state 65
    '-'       shift, and go to state 66
    '+'       shift, and go to state 67
    '?'       shift, and go to state 68

    $default  reduce using rule 29 (variable_id)

    unary_operator  go to state 69


State 39

   42 args: args . ',' arg
   45 arg_e: args .

    ','  shift, and go to state 70

    $default  reduce using rule 45 (arg_e)


State 40

   41 args: arg .

    $default  reduce using rule 41 (args)


State 41

   24 func: standard_type IDENT '(' arg_e . ')' compound_statement

    ')'  shift, and go to state 71


State 42

   43 arg: standard_type . IDENT
   44    | standard_type . IDENT '[' ']'

    IDENT  shift, and go to state 72


State 43

   30 variable_id: IDENT '[' ']' .
   31            | IDENT '[' ']' . '=' '{' valueList '}'

    '='  shift, and go to state 73

    $default  reduce using rule 30 (variable_id)


State 44

   28 variable_id: IDENT .
   29            | IDENT . '=' expression
   30            | IDENT . '[' ']'
   31            | IDENT . '[' ']' '=' '{' valueList '}'

    '='  shift, and go to state 18
    '['  shift, and go to state 20

    $default  reduce using rule 28 (variable_id)


State 45

   27 var_decl_list: var_decl_list ',' variable_id .

    $default  reduce using rule 27 (var_decl_list)


State 46

   10 constructor: IDENT . '(' arg_e ')' compound_statement

    '('  shift, and go to state 74


State 47

    5 class_dec: CLASS IDENT '{' members '}' .

    $default  reduce using rule 5 (class_dec)


State 48

    8 members: members constructor .

    $default  reduce using rule 8 (members)


State 49

    6 members: members func .

    $default  reduce using rule 6 (members)


State 50

    7 members: members var_decl .

    $default  reduce using rule 7 (members)


State 51

   74 expression: IDENT '(' . expression_list ')'

    IDENT        shift, and go to state 24
    INTNUM       shift, and go to state 25
    STRINGCONST  shift, and go to state 26
    CHARCONST    shift, and go to state 27
    NULLL        shift, and go to state 28
    FALSE        shift, and go to state 29
    TRUE         shift, and go to state 30
    REALNUM      shift, and go to state 31
    '!'          shift, and go to state 32
    '-'          shift, and go to state 33
    '('          shift, and go to state 34

    $default  reduce using rule 52 (expression_list)

    value            go to state 35
    expression_list  go to state 75
    variable         go to state 36
    tripleCondition  go to state 37
    expression       go to state 76


State 52

   54 variable: IDENT '[' . expression ']'

    IDENT        shift, and go to state 24
    INTNUM       shift, and go to state 25
    STRINGCONST  shift, and go to state 26
    CHARCONST    shift, and go to state 27
    NULLL        shift, and go to state 28
    FALSE        shift, and go to state 29
    TRUE         shift, and go to state 30
    REALNUM      shift, and go to state 31
    '!'          shift, and go to state 32
    '-'          shift, and go to state 33
    '('          shift, and go to state 34

    value            go to state 35
    variable         go to state 36
    tripleCondition  go to state 37
    expression       go to state 77


State 53

   71 tripleCondition: expression . '?' expression ':' expression
   76 expression: expression . unary_operator expression
   77           | '!' expression .

    DIV       shift, and go to state 57
    MUL       shift, and go to state 59
    GREATER   shift, and go to state 60
    SMALLER   shift, and go to state 61
    ISEQUAL   shift, and go to state 62
    NOTEQUAL  shift, and go to state 63
    '<'       shift, and go to state 64
    '>'       shift, and go to state 65
    '-'       shift, and go to state 66
    '+'       shift, and go to state 67
    '?'       shift, and go to state 68

    $default  reduce using rule 77 (expression)

    unary_operator  go to state 69


State 54

   71 tripleCondition: expression . '?' expression ':' expression
   76 expression: expression . unary_operator expression
   78           | '-' expression .

    DIV      shift, and go to state 57
    MUL      shift, and go to state 59
    ISEQUAL  shift, and go to state 62
    '?'      shift, and go to state 68

    $default  reduce using rule 78 (expression)

    unary_operator  go to state 69


State 55

   71 tripleCondition: expression . '?' expression ':' expression
   75 expression: '(' expression . ')'
   76           | expression . unary_operator expression

    OR        shift, and go to state 56
    DIV       shift, and go to state 57
    AND       shift, and go to state 58
    MUL       shift, and go to state 59
    GREATER   shift, and go to state 60
    SMALLER   shift, and go to state 61
    ISEQUAL   shift, and go to state 62
    NOTEQUAL  shift, and go to state 63
    '<'       shift, and go to state 64
    '>'       shift, and go to state 65
    '-'       shift, and go to state 66
    '+'       shift, and go to state 67
    '?'       shift, and go to state 68
    ')'       shift, and go to state 78

    unary_operator  go to state 69


State 56

   21 unary_operator: OR .

    $default  reduce using rule 21 (unary_operator)


State 57

   14 unary_operator: DIV .

    $default  reduce using rule 14 (unary_operator)


State 58

   22 unary_operator: AND .

    $default  reduce using rule 22 (unary_operator)


State 59

   13 unary_operator: MUL .

    $default  reduce using rule 13 (unary_operator)


State 60

   17 unary_operator: GREATER .

    $default  reduce using rule 17 (unary_operator)


State 61

   18 unary_operator: SMALLER .

    $default  reduce using rule 18 (unary_operator)


State 62

   19 unary_operator: ISEQUAL .

    $default  reduce using rule 19 (unary_operator)


State 63

   20 unary_operator: NOTEQUAL .

    $default  reduce using rule 20 (unary_operator)


State 64

   16 unary_operator: '<' .

    $default  reduce using rule 16 (unary_operator)


State 65

   15 unary_operator: '>' .

    $default  reduce using rule 15 (unary_operator)


State 66

   12 unary_operator: '-' .

    $default  reduce using rule 12 (unary_operator)


State 67

   11 unary_operator: '+' .

    $default  reduce using rule 11 (unary_operator)


State 68

   71 tripleCondition: expression '?' . expression ':' expression

    IDENT        shift, and go to state 24
    INTNUM       shift, and go to state 25
    STRINGCONST  shift, and go to state 26
    CHARCONST    shift, and go to state 27
    NULLL        shift, and go to state 28
    FALSE        shift, and go to state 29
    TRUE         shift, and go to state 30
    REALNUM      shift, and go to state 31
    '!'          shift, and go to state 32
    '-'          shift, and go to state 33
    '('          shift, and go to state 34

    value            go to state 35
    variable         go to state 36
    tripleCondition  go to state 37
    expression       go to state 79


State 69

   76 expression: expression unary_operator . expression

    IDENT        shift, and go to state 24
    INTNUM       shift, and go to state 25
    STRINGCONST  shift, and go to state 26
    CHARCONST    shift, and go to state 27
    NULLL        shift, and go to state 28
    FALSE        shift, and go to state 29
    TRUE         shift, and go to state 30
    REALNUM      shift, and go to state 31
    '!'          shift, and go to state 32
    '-'          shift, and go to state 33
    '('          shift, and go to state 34

    value            go to state 35
    variable         go to state 36
    tripleCondition  go to state 37
    expression       go to state 80


State 70

   42 args: args ',' . arg

    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    BOOL    shift, and go to state 5
    CHAR    shift, and go to state 6
    STRING  shift, and go to state 7

    arg            go to state 81
    standard_type  go to state 42


State 71

   24 func: standard_type IDENT '(' arg_e ')' . compound_statement

    '{'  shift, and go to state 82

    compound_statement  go to state 83


State 72

   43 arg: standard_type IDENT .
   44    | standard_type IDENT . '[' ']'

    '['  shift, and go to state 84

    $default  reduce using rule 43 (arg)


State 73

   31 variable_id: IDENT '[' ']' '=' . '{' valueList '}'

    '{'  shift, and go to state 85


State 74

   10 constructor: IDENT '(' . arg_e ')' compound_statement

    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    BOOL    shift, and go to state 5
    CHAR    shift, and go to state 6
    STRING  shift, and go to state 7

    $default  reduce using rule 46 (arg_e)

    args           go to state 39
    arg            go to state 40
    arg_e          go to state 86
    standard_type  go to state 42


State 75

   51 expression_list: expression_list . ',' expression
   74 expression: IDENT '(' expression_list . ')'

    ')'  shift, and go to state 87
    ','  shift, and go to state 88


State 76

   50 expression_list: expression .
   71 tripleCondition: expression . '?' expression ':' expression
   76 expression: expression . unary_operator expression

    OR        shift, and go to state 56
    DIV       shift, and go to state 57
    AND       shift, and go to state 58
    MUL       shift, and go to state 59
    GREATER   shift, and go to state 60
    SMALLER   shift, and go to state 61
    ISEQUAL   shift, and go to state 62
    NOTEQUAL  shift, and go to state 63
    '<'       shift, and go to state 64
    '>'       shift, and go to state 65
    '-'       shift, and go to state 66
    '+'       shift, and go to state 67
    '?'       shift, and go to state 68

    $default  reduce using rule 50 (expression_list)

    unary_operator  go to state 69


State 77

   54 variable: IDENT '[' expression . ']'
   71 tripleCondition: expression . '?' expression ':' expression
   76 expression: expression . unary_operator expression

    OR        shift, and go to state 56
    DIV       shift, and go to state 57
    AND       shift, and go to state 58
    MUL       shift, and go to state 59
    GREATER   shift, and go to state 60
    SMALLER   shift, and go to state 61
    ISEQUAL   shift, and go to state 62
    NOTEQUAL  shift, and go to state 63
    '<'       shift, and go to state 64
    '>'       shift, and go to state 65
    '-'       shift, and go to state 66
    '+'       shift, and go to state 67
    '?'       shift, and go to state 68
    ']'       shift, and go to state 89

    unary_operator  go to state 69


State 78

   75 expression: '(' expression ')' .

    $default  reduce using rule 75 (expression)


State 79

   71 tripleCondition: expression . '?' expression ':' expression
   71                | expression '?' expression . ':' expression
   76 expression: expression . unary_operator expression

    OR        shift, and go to state 56
    DIV       shift, and go to state 57
    AND       shift, and go to state 58
    MUL       shift, and go to state 59
    GREATER   shift, and go to state 60
    SMALLER   shift, and go to state 61
    ISEQUAL   shift, and go to state 62
    NOTEQUAL  shift, and go to state 63
    '<'       shift, and go to state 64
    '>'       shift, and go to state 65
    '-'       shift, and go to state 66
    '+'       shift, and go to state 67
    '?'       shift, and go to state 68
    ':'       shift, and go to state 90

    unary_operator  go to state 69


State 80

   71 tripleCondition: expression . '?' expression ':' expression
   76 expression: expression . unary_operator expression
   76           | expression unary_operator expression .

    $default  reduce using rule 76 (expression)

    unary_operator  go to state 69


State 81

   42 args: args ',' arg .

    $default  reduce using rule 42 (args)


State 82

   23 compound_statement: '{' . stmts '}'

    $default  reduce using rule 47 (stmts)

    stmts  go to state 91


State 83

   24 func: standard_type IDENT '(' arg_e ')' compound_statement .

    $default  reduce using rule 24 (func)


State 84

   44 arg: standard_type IDENT '[' . ']'

    ']'  shift, and go to state 92


State 85

   31 variable_id: IDENT '[' ']' '=' '{' . valueList '}'

    INTNUM       shift, and go to state 25
    STRINGCONST  shift, and go to state 26
    CHARCONST    shift, and go to state 27
    NULLL        shift, and go to state 28
    FALSE        shift, and go to state 29
    TRUE         shift, and go to state 30
    REALNUM      shift, and go to state 31

    valueList  go to state 93
    value      go to state 94


State 86

   10 constructor: IDENT '(' arg_e . ')' compound_statement

    ')'  shift, and go to state 95


State 87

   74 expression: IDENT '(' expression_list ')' .

    $default  reduce using rule 74 (expression)


State 88

   51 expression_list: expression_list ',' . expression

    IDENT        shift, and go to state 24
    INTNUM       shift, and go to state 25
    STRINGCONST  shift, and go to state 26
    CHARCONST    shift, and go to state 27
    NULLL        shift, and go to state 28
    FALSE        shift, and go to state 29
    TRUE         shift, and go to state 30
    REALNUM      shift, and go to state 31
    '!'          shift, and go to state 32
    '-'          shift, and go to state 33
    '('          shift, and go to state 34

    value            go to state 35
    variable         go to state 36
    tripleCondition  go to state 37
    expression       go to state 96


State 89

   54 variable: IDENT '[' expression ']' .

    $default  reduce using rule 54 (variable)


State 90

   71 tripleCondition: expression '?' expression ':' . expression

    IDENT        shift, and go to state 24
    INTNUM       shift, and go to state 25
    STRINGCONST  shift, and go to state 26
    CHARCONST    shift, and go to state 27
    NULLL        shift, and go to state 28
    FALSE        shift, and go to state 29
    TRUE         shift, and go to state 30
    REALNUM      shift, and go to state 31
    '!'          shift, and go to state 32
    '-'          shift, and go to state 33
    '('          shift, and go to state 34

    value            go to state 35
    variable         go to state 36
    tripleCondition  go to state 37
    expression       go to state 97


State 91

   23 compound_statement: '{' stmts . '}'
   48 stmts: stmts . statement
   49      | stmts . var_decl

    IDENT     shift, and go to state 98
    IF        shift, and go to state 99
    WHILE     shift, and go to state 100
    INT       shift, and go to state 3
    FLOAT     shift, and go to state 4
    BOOL      shift, and go to state 5
    CHAR      shift, and go to state 6
    STRING    shift, and go to state 7
    BREAK     shift, and go to state 101
    CONTINUE  shift, and go to state 102
    RETURN    shift, and go to state 103
    '{'       shift, and go to state 82
    '}'       shift, and go to state 104

    compound_statement  go to state 105
    var_decl            go to state 106
    variable            go to state 107
    standard_type       go to state 108
    assignStatement     go to state 109
    cond_stmt           go to state 110
    while_stmt          go to state 111
    statement           go to state 112


State 92

   44 arg: standard_type IDENT '[' ']' .

    $default  reduce using rule 44 (arg)


State 93

   31 variable_id: IDENT '[' ']' '=' '{' valueList . '}'
   32 valueList: valueList . ',' value

    '}'  shift, and go to state 113
    ','  shift, and go to state 114


State 94

   33 valueList: value .

    $default  reduce using rule 33 (valueList)


State 95

   10 constructor: IDENT '(' arg_e ')' . compound_statement

    '{'  shift, and go to state 82

    compound_statement  go to state 115


State 96

   51 expression_list: expression_list ',' expression .
   71 tripleCondition: expression . '?' expression ':' expression
   76 expression: expression . unary_operator expression

    OR        shift, and go to state 56
    DIV       shift, and go to state 57
    AND       shift, and go to state 58
    MUL       shift, and go to state 59
    GREATER   shift, and go to state 60
    SMALLER   shift, and go to state 61
    ISEQUAL   shift, and go to state 62
    NOTEQUAL  shift, and go to state 63
    '<'       shift, and go to state 64
    '>'       shift, and go to state 65
    '-'       shift, and go to state 66
    '+'       shift, and go to state 67
    '?'       shift, and go to state 68

    $default  reduce using rule 51 (expression_list)

    unary_operator  go to state 69


State 97

   71 tripleCondition: expression . '?' expression ':' expression
   71                | expression '?' expression ':' expression .
   76 expression: expression . unary_operator expression

    ISEQUAL  shift, and go to state 62

    '?'  error (nonassociative)

    $default  reduce using rule 71 (tripleCondition)

    unary_operator  go to state 69


State 98

   53 variable: IDENT .
   54         | IDENT . '[' expression ']'

    '['  shift, and go to state 52

    $default  reduce using rule 53 (variable)


State 99

   61 cond_stmt: IF . '(' expression ')' statement
   62          | IF . '(' expression ')' statement ELSE statement

    '('  shift, and go to state 116


State 100

   63 while_stmt: WHILE . '(' expression ')' statement

    '('  shift, and go to state 117


State 101

   67 statement: BREAK . ';'

    ';'  shift, and go to state 118


State 102

   68 statement: CONTINUE . ';'

    ';'  shift, and go to state 119


State 103

   69 statement: RETURN . expression ';'

    IDENT        shift, and go to state 24
    INTNUM       shift, and go to state 25
    STRINGCONST  shift, and go to state 26
    CHARCONST    shift, and go to state 27
    NULLL        shift, and go to state 28
    FALSE        shift, and go to state 29
    TRUE         shift, and go to state 30
    REALNUM      shift, and go to state 31
    '!'          shift, and go to state 32
    '-'          shift, and go to state 33
    '('          shift, and go to state 34

    value            go to state 35
    variable         go to state 36
    tripleCondition  go to state 37
    expression       go to state 120


State 104

   23 compound_statement: '{' stmts '}' .

    $default  reduce using rule 23 (compound_statement)


State 105

   70 statement: compound_statement .

    $default  reduce using rule 70 (statement)


State 106

   49 stmts: stmts var_decl .

    $default  reduce using rule 49 (stmts)


State 107

   60 assignStatement: variable . '=' expression ';'

    '='  shift, and go to state 121


State 108

   25 var_decl: standard_type . var_decl_list ';'

    IDENT  shift, and go to state 44

    var_decl_list  go to state 15
    variable_id    go to state 16


State 109

   64 statement: assignStatement .

    $default  reduce using rule 64 (statement)


State 110

   65 statement: cond_stmt .

    $default  reduce using rule 65 (statement)


State 111

   66 statement: while_stmt .

    $default  reduce using rule 66 (statement)


State 112

   48 stmts: stmts statement .

    $default  reduce using rule 48 (stmts)


State 113

   31 variable_id: IDENT '[' ']' '=' '{' valueList '}' .

    $default  reduce using rule 31 (variable_id)


State 114

   32 valueList: valueList ',' . value

    INTNUM       shift, and go to state 25
    STRINGCONST  shift, and go to state 26
    CHARCONST    shift, and go to state 27
    NULLL        shift, and go to state 28
    FALSE        shift, and go to state 29
    TRUE         shift, and go to state 30
    REALNUM      shift, and go to state 31

    value  go to state 122


State 115

   10 constructor: IDENT '(' arg_e ')' compound_statement .

    $default  reduce using rule 10 (constructor)


State 116

   61 cond_stmt: IF '(' . expression ')' statement
   62          | IF '(' . expression ')' statement ELSE statement

    IDENT        shift, and go to state 24
    INTNUM       shift, and go to state 25
    STRINGCONST  shift, and go to state 26
    CHARCONST    shift, and go to state 27
    NULLL        shift, and go to state 28
    FALSE        shift, and go to state 29
    TRUE         shift, and go to state 30
    REALNUM      shift, and go to state 31
    '!'          shift, and go to state 32
    '-'          shift, and go to state 33
    '('          shift, and go to state 34

    value            go to state 35
    variable         go to state 36
    tripleCondition  go to state 37
    expression       go to state 123


State 117

   63 while_stmt: WHILE '(' . expression ')' statement

    IDENT        shift, and go to state 24
    INTNUM       shift, and go to state 25
    STRINGCONST  shift, and go to state 26
    CHARCONST    shift, and go to state 27
    NULLL        shift, and go to state 28
    FALSE        shift, and go to state 29
    TRUE         shift, and go to state 30
    REALNUM      shift, and go to state 31
    '!'          shift, and go to state 32
    '-'          shift, and go to state 33
    '('          shift, and go to state 34

    value            go to state 35
    variable         go to state 36
    tripleCondition  go to state 37
    expression       go to state 124


State 118

   67 statement: BREAK ';' .

    $default  reduce using rule 67 (statement)


State 119

   68 statement: CONTINUE ';' .

    $default  reduce using rule 68 (statement)


State 120

   69 statement: RETURN expression . ';'
   71 tripleCondition: expression . '?' expression ':' expression
   76 expression: expression . unary_operator expression

    OR        shift, and go to state 56
    DIV       shift, and go to state 57
    AND       shift, and go to state 58
    MUL       shift, and go to state 59
    GREATER   shift, and go to state 60
    SMALLER   shift, and go to state 61
    ISEQUAL   shift, and go to state 62
    NOTEQUAL  shift, and go to state 63
    '<'       shift, and go to state 64
    '>'       shift, and go to state 65
    '-'       shift, and go to state 66
    '+'       shift, and go to state 67
    '?'       shift, and go to state 68
    ';'       shift, and go to state 125

    unary_operator  go to state 69


State 121

   60 assignStatement: variable '=' . expression ';'

    IDENT        shift, and go to state 24
    INTNUM       shift, and go to state 25
    STRINGCONST  shift, and go to state 26
    CHARCONST    shift, and go to state 27
    NULLL        shift, and go to state 28
    FALSE        shift, and go to state 29
    TRUE         shift, and go to state 30
    REALNUM      shift, and go to state 31
    '!'          shift, and go to state 32
    '-'          shift, and go to state 33
    '('          shift, and go to state 34

    value            go to state 35
    variable         go to state 36
    tripleCondition  go to state 37
    expression       go to state 126


State 122

   32 valueList: valueList ',' value .

    $default  reduce using rule 32 (valueList)


State 123

   61 cond_stmt: IF '(' expression . ')' statement
   62          | IF '(' expression . ')' statement ELSE statement
   71 tripleCondition: expression . '?' expression ':' expression
   76 expression: expression . unary_operator expression

    OR        shift, and go to state 56
    DIV       shift, and go to state 57
    AND       shift, and go to state 58
    MUL       shift, and go to state 59
    GREATER   shift, and go to state 60
    SMALLER   shift, and go to state 61
    ISEQUAL   shift, and go to state 62
    NOTEQUAL  shift, and go to state 63
    '<'       shift, and go to state 64
    '>'       shift, and go to state 65
    '-'       shift, and go to state 66
    '+'       shift, and go to state 67
    '?'       shift, and go to state 68
    ')'       shift, and go to state 127

    unary_operator  go to state 69


State 124

   63 while_stmt: WHILE '(' expression . ')' statement
   71 tripleCondition: expression . '?' expression ':' expression
   76 expression: expression . unary_operator expression

    OR        shift, and go to state 56
    DIV       shift, and go to state 57
    AND       shift, and go to state 58
    MUL       shift, and go to state 59
    GREATER   shift, and go to state 60
    SMALLER   shift, and go to state 61
    ISEQUAL   shift, and go to state 62
    NOTEQUAL  shift, and go to state 63
    '<'       shift, and go to state 64
    '>'       shift, and go to state 65
    '-'       shift, and go to state 66
    '+'       shift, and go to state 67
    '?'       shift, and go to state 68
    ')'       shift, and go to state 128

    unary_operator  go to state 69


State 125

   69 statement: RETURN expression ';' .

    $default  reduce using rule 69 (statement)


State 126

   60 assignStatement: variable '=' expression . ';'
   71 tripleCondition: expression . '?' expression ':' expression
   76 expression: expression . unary_operator expression

    OR        shift, and go to state 56
    DIV       shift, and go to state 57
    AND       shift, and go to state 58
    MUL       shift, and go to state 59
    GREATER   shift, and go to state 60
    SMALLER   shift, and go to state 61
    ISEQUAL   shift, and go to state 62
    NOTEQUAL  shift, and go to state 63
    '<'       shift, and go to state 64
    '>'       shift, and go to state 65
    '-'       shift, and go to state 66
    '+'       shift, and go to state 67
    '?'       shift, and go to state 68
    ';'       shift, and go to state 129

    unary_operator  go to state 69


State 127

   61 cond_stmt: IF '(' expression ')' . statement
   62          | IF '(' expression ')' . statement ELSE statement

    IDENT     shift, and go to state 98
    IF        shift, and go to state 99
    WHILE     shift, and go to state 100
    BREAK     shift, and go to state 101
    CONTINUE  shift, and go to state 102
    RETURN    shift, and go to state 103
    '{'       shift, and go to state 82

    compound_statement  go to state 105
    variable            go to state 107
    assignStatement     go to state 109
    cond_stmt           go to state 110
    while_stmt          go to state 111
    statement           go to state 130


State 128

   63 while_stmt: WHILE '(' expression ')' . statement

    IDENT     shift, and go to state 98
    IF        shift, and go to state 99
    WHILE     shift, and go to state 100
    BREAK     shift, and go to state 101
    CONTINUE  shift, and go to state 102
    RETURN    shift, and go to state 103
    '{'       shift, and go to state 82

    compound_statement  go to state 105
    variable            go to state 107
    assignStatement     go to state 109
    cond_stmt           go to state 110
    while_stmt          go to state 111
    statement           go to state 131


State 129

   60 assignStatement: variable '=' expression ';' .

    $default  reduce using rule 60 (assignStatement)


State 130

   61 cond_stmt: IF '(' expression ')' statement .
   62          | IF '(' expression ')' statement . ELSE statement

    ELSE  shift, and go to state 132

    $default  reduce using rule 61 (cond_stmt)


State 131

   63 while_stmt: WHILE '(' expression ')' statement .

    $default  reduce using rule 63 (while_stmt)


State 132

   62 cond_stmt: IF '(' expression ')' statement ELSE . statement

    IDENT     shift, and go to state 98
    IF        shift, and go to state 99
    WHILE     shift, and go to state 100
    BREAK     shift, and go to state 101
    CONTINUE  shift, and go to state 102
    RETURN    shift, and go to state 103
    '{'       shift, and go to state 82

    compound_statement  go to state 105
    variable            go to state 107
    assignStatement     go to state 109
    cond_stmt           go to state 110
    while_stmt          go to state 111
    statement           go to state 133


State 133

   62 cond_stmt: IF '(' expression ')' statement ELSE statement .

    $default  reduce using rule 62 (cond_stmt)
